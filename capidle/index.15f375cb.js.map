{"mappings":"AACA,MAAMA,UAAeC,YACnBC,cACEC,QAGoC,OAAhCC,KAAKC,aAAa,UAatBD,KAAKE,UAAa,iEAETF,KAAKE,0EAdZF,KAAKE,UAAa,mEAEYF,KAAKE,4J,EAkBzCC,OAAOC,eAAeC,OAAO,cAAeT,GC1B5C,MAAMU,UAAcT,YAClBC,cACEC,QAEoC,OAAhCC,KAAKC,aAAa,YACpBM,SAASC,eAAe,2BAA2BN,UAAYO,aAAaC,QAAQ,oBACpFH,SAASC,eAAe,0BAA0BN,UAAYO,aAAaC,QAAQ,mBACnFH,SAASC,eAAe,wBAAwBN,UAAYO,aAAaC,QAAQ,iBACjFH,SAASC,eAAe,2BAA2BN,UAAYO,aAAaC,QAAQ,qBAGtFV,KAAKE,UAAa,oKAKTF,KAAKE,0EAMdF,KAAKW,wB,CAGPA,yBACE,MAAMC,EAAQL,SAASC,eAAe,SAChCK,EAAUN,SAASC,eAAe,YAClCM,EAAWP,SAASC,eAAe,aACnCO,EAAaR,SAASC,eAAe,eACrCQ,EAAWT,SAASC,eAAe,aACnBD,SAASC,eAAe,mBAE9C,SAASS,EAAiBC,GACV,WAAVA,EAAEC,KAAkBC,G,CAG1B,SAASA,IACPR,EAAMS,MAAMC,QAAU,OACtBf,SAASgB,oBAAoB,UAAWN,GACxCR,aAAa,cAAgBe,WAAY,EACzCjB,SAASkB,cAAc,IAAIC,MAAM,iBAInC,WACkB,MAAbX,IACDA,EAAWM,MAAMC,QAAU,QAE7Bf,SAASgB,oBAAoB,UAAWN,GACxCR,aAAa,cAAgBe,WAAY,EACzCjB,SAASkB,cAAc,IAAIC,MAAM,gB,CATjCC,E,CAaF,SAASC,IACPhB,EAAMS,MAAMC,QAAU,QACtBf,SAASsB,iBAAiB,UAAWZ,GACrCV,SAASkB,cAAc,IAAIC,MAAM,gB,CAYnCV,EAASc,QAAUV,EACnBP,EAAQiB,QAAUF,EACF,MAAZd,IACFA,EAASgB,QAZX,WACmB,MAAdf,IACDA,EAAWM,MAAMC,QAAU,SAE7Bf,SAASsB,iBAAiB,UAAWZ,GACrCV,SAASkB,cAAc,IAAIC,MAAM,gB,GAWnCvB,OAAO2B,QAAU,SAAUC,GACrBA,EAAMC,QAAUpB,GAAOQ,G,EAI7BR,EAAMS,MAAMC,QAAU,OACL,MAAdP,IACDA,EAAWM,MAAMC,QAAU,QAMO,OAAhCtB,KAAKC,aAAa,YACdQ,aAAa,cAAgBe,UAC9BJ,IAD2CQ,I,EAMtDzB,OAAOC,eAAeC,OAAO,aAAcC","sources":["src/components/script/navbar.js","src/components/script/help-modal.js"],"sourcesContent":["/** usage: <core-navbar>My Game Name</core-navbar> */\nclass Navbar extends HTMLElement {\n  constructor() {\n    super();\n\n    // if you use `<core-navbar custom>`, this component does nothing\n    if (this.getAttribute(\"custom\") !== null) {\n      this.innerHTML = `\n        <div><a></a></div>\n        <div class = \"nav-title\" >${this.innerHTML}</div>\n        <div id=\"help-btn\">\n          <b href=\"#\">\n          <div class=\"nav-button\">Best</div>\n          </b>\n        </div>\n      `;\n      return;\n    }\n\n    this.innerHTML = `\n      <div><a href=\"../index.html\">⬅️</a></div>\n      <div>${this.innerHTML}</div>\n      <div id=\"help-btn\"><a href=\"#\">❔</a></div>\n    `;\n  }\n}\n\nwindow.customElements.define(\"core-navbar\", Navbar);\n","/** usage: <core-modal>Window contents</core-modal> */\nclass Modal extends HTMLElement {\n  constructor() {\n    super();\n\n    if (this.getAttribute(\"custom\") !== null) {\n      document.getElementById(\"best-game-score-capidle\").innerHTML = localStorage.getItem(\"bestScoreCapidle\");\n      document.getElementById(\"best-game-score-liedle\").innerHTML = localStorage.getItem(\"bestScoreLiedle\");\n      document.getElementById(\"best-game-score-2048\").innerHTML = localStorage.getItem(\"bestScore2048\");\n      document.getElementById(\"best-game-score-tactong\").innerHTML = localStorage.getItem(\"bestScoreTactong\");\n    }\n\n    this.innerHTML = `\n\t\t\t<div>\n\t\t\t\t<div id=\"modal\">\n\t\t\t\t\t<div class=\"modal-window\">\n          <span class=\"close-btn\" id=\"close-btn\">&times;</span>\n\t\t\t\t\t\t<div>${this.innerHTML}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t`;\n\n    this.registerEventListeners();\n  }\n\n  registerEventListeners() {\n    const modal = document.getElementById(\"modal\");\n    const helpBtn = document.getElementById(\"help-btn\");\n    const shareBtn = document.getElementById(\"share-btn\");\n    const shareModal = document.getElementById(\"share-modal\");\n    const closeBtn = document.getElementById(\"close-btn\");\n    const closeBtnShare = document.getElementById(\"close-btn-share\");\n\n    function onKeyDownInModal(e) {\n      if (e.key === \"Escape\") closeModal();\n    }\n\n    function closeModal() {\n      modal.style.display = \"none\";\n      document.removeEventListener(\"keydown\", onKeyDownInModal);\n      localStorage[\"seen-modal-\" + location] = true;\n      document.dispatchEvent(new Event(\"modal-closed\"));\n      closeShareModal();\n    }\n\n    function closeShareModal(){\n      if(shareModal !=null){\n        shareModal.style.display = \"none\";\n      }\n      document.removeEventListener(\"keydown\", onKeyDownInModal);\n      localStorage[\"seen-modal-\" + location] = true;\n      document.dispatchEvent(new Event(\"modal-closed\"));\n    }\n\n\n    function openModal() {\n      modal.style.display = \"block\";\n      document.addEventListener(\"keydown\", onKeyDownInModal);\n      document.dispatchEvent(new Event(\"modal-opened\"));\n    }\n\n    function openSharePop(){\n      if(shareModal != null){\n        shareModal.style.display = \"block\";\n      }\n      document.addEventListener(\"keydown\", onKeyDownInModal);\n      document.dispatchEvent(new Event(\"modal-opened\"));\n    }\n    \n\n    closeBtn.onclick = closeModal;\n    helpBtn.onclick = openModal;\n    if (shareBtn != null){\n      shareBtn.onclick = openSharePop;\n    }\n\n    // close window if they user clicks outside of the window\n    window.onclick = function (event) {\n      if (event.target == modal) closeModal();\n    };\n\n    // hide the modals by default\n    modal.style.display = \"none\";\n    if(shareModal != null){\n      shareModal.style.display = \"none\";\n    }\n\n\n    // if user havent seen the modal, show the modal once the window is open\n    // homepage uses custom modal, and it does not require modal to appear for first time user\n    if (this.getAttribute(\"custom\") === null) {\n      if ((!localStorage[\"seen-modal-\" + location])) {openModal();}\n      else{closeModal();}\n    }\n  }\n}\n\nwindow.customElements.define(\"core-modal\", Modal);\n"],"names":["Navbar","HTMLElement","constructor","super","this","getAttribute","innerHTML","window","customElements","define","Modal","document","getElementById","localStorage","getItem","registerEventListeners","modal","helpBtn","shareBtn","shareModal","closeBtn","onKeyDownInModal","e","key","closeModal","style","display","removeEventListener","location","dispatchEvent","Event","closeShareModal","openModal","addEventListener","onclick","event","target"],"version":3,"file":"index.15f375cb.js.map"}